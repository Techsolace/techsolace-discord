[
    {
        "label": "discord",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "discord",
        "description": "discord",
        "detail": "discord",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "config",
        "description": "config",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "generate_from_prompt",
        "importPath": "utils.tools",
        "description": "utils.tools",
        "isExtraImport": true,
        "detail": "utils.tools",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "google.generativeai",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "google.generativeai",
        "description": "google.generativeai",
        "detail": "google.generativeai",
        "documentation": {}
    },
    {
        "label": "jishaku",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jishaku",
        "description": "jishaku",
        "detail": "jishaku",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "GeminiCog",
        "kind": 6,
        "importPath": "cogs.ai",
        "description": "cogs.ai",
        "peekOfCode": "class GeminiCog(commands.Cog):\n    def __init__(self, bot):\n        self.bot = bot\n    @commands.command(\n        name='ai',\n        aliases=['query']\n    )\n    async def gptcommand(self, ctx: commands.Context, *, prompt: str = None):\n        await ctx.typing()\n        if prompt is None:",
        "detail": "cogs.ai",
        "documentation": {}
    },
    {
        "label": "ModerationCommands",
        "kind": 6,
        "importPath": "cogs.moderation",
        "description": "cogs.moderation",
        "peekOfCode": "class ModerationCommands(commands.Cog):\n    def __init__(self, bot):\n        self.bot = bot\n    @commands.command(name='kick', aliases=['gm'])\n    @commands.is_owner()\n    async def kick_cmd(self, ctx: commands.Context, member: discord.Member = None, *, reason: str = None):\n        if member is None:\n            return await ctx.send(\"`‚ö†Ô∏è` : Member is a required value.\")\n        if reason is None:\n            reason = \"no reason provided\"",
        "detail": "cogs.moderation",
        "documentation": {}
    },
    {
        "label": "UtilCommands",
        "kind": 6,
        "importPath": "cogs.utils",
        "description": "cogs.utils",
        "peekOfCode": "class UtilCommands(commands.Cog):\n    def __init__(self, bot):\n        self.bot = bot\n    @commands.command(name='ping')\n    async def ping(self, ctx: commands.Context):\n        await ctx.send(f\"üèì Pong : {round(self.bot.latency * 1000)} ms\")\nasync def setup(bot):\n    await bot.add_cog(UtilCommands(bot))",
        "detail": "cogs.utils",
        "documentation": {}
    },
    {
        "label": "model",
        "kind": 5,
        "importPath": "utils.tools",
        "description": "utils.tools",
        "peekOfCode": "model = genai.GenerativeModel('gemini-1.5-flash')\nasync def generate_from_prompt(prompt: str):\n    res = model.generate_content(prompt)\n    return res.text",
        "detail": "utils.tools",
        "documentation": {}
    },
    {
        "label": "bot",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "bot = commands.Bot(\n    command_prefix='.',\n    intents=discord.Intents.all(),\n    allowed_mentions = discord.AllowedMentions(\n        everyone=False,\n        roles=False\n    ),\n    activity = discord.CustomActivity(name='.gg/techsolace | elevate your brand with our digital mastery', emoji=\"üé®\"),\n    help_command=None\n)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "bot.owner_ids",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "bot.owner_ids = [1139950107995934863, 680820132355899622, 1148259965946052619]\n@bot.event\nasync def on_ready():\n    for files in os.listdir('./cogs'):\n        if files.endswith(\".py\"):\n            try:\n                await bot.load_extension(f'cogs.{files[:-3]}')\n            except Exception as e:\n                print(e)\n    await bot.load_extension(\"jishaku\")",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "Media",
        "kind": 6,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "class Media:\n    google = \"https://static-00.iconduck.com/assets.00/google-icon-2048x2048-pks9lbdv.png\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "color",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "color = 0x2b2d31\nclass Media:\n    google = \"https://static-00.iconduck.com/assets.00/google-icon-2048x2048-pks9lbdv.png\"",
        "detail": "config",
        "documentation": {}
    }
]